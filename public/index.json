[{"body":"Just an example of an additional docs folder.\nSurprised that it doesn't have a left sidebar menu? Worry not; just follow this instructions to enable it.\nTutorials Back to docs ","link":"http://localhost:1313/tutorials/","section":"tutorials","title":"Tutorials' Docs"},{"body":"","link":"http://localhost:1313/blog/","section":"blog","title":"Blog"},{"body":"","link":"http://localhost:1313/categories/","section":"categories","title":"Categories"},{"body":" Computer hacking 101 Welcome to Computer Hacking 101\nWelcome to the Computer Hacking 101 website. Our platform provides a vast array of valuable information to optimize your computing experience. Our extensive selection of tutorials covers topics such as docker, windows, file synchronization across devices, Linux, and much more.\nFurthermore, we offer an accompanying YouTube channel, where you can find complementary resources to the documents found on our website, which are accessible through our comprehensive documentation section.\n","link":"http://localhost:1313/","section":"","title":"Computer Hacking 101"},{"body":"","link":"http://localhost:1313/categories/docker/","section":"categories","title":"Docker"},{"body":"All of my docs we have about docker.\n","link":"http://localhost:1313/tutorials/docker/","section":"tutorials","title":"Docker"},{"body":" move to another server I am now hosting this website on my own server located at my house. I am using Cloudflare tunnel, Cloudflare catch, docker, GitHub, and Jenkins to create and host this and my personal site. I will make multiple videos on how to do this. It took me a while to set it up correctly.\nstill fixing a few issues with the website I still need to fix a few more issues on this website. The doc page is still messed up, and I have some SEO things to make the website better to find in search engines. I still need to get the copy-and-paste to work correctly.\nyoutube channel Sorry, getting the syncthing video up and running has been taking forever. I had some issues when I was recording it. I have recorded it three times, and there are some spots I need to rerecord again. Then I have to finish editing it. I am still learning DaVinci Resolve, so it takes some time to create the video.\n","link":"http://localhost:1313/blog/feb152023update/","section":"blog","title":"Feb 15, 2023, update"},{"body":"In recent years, the use of Docker has skyrocketed in popularity, especially within the development community. Docker is an open-source containerization platform that simplifies the process of building, deploying, and managing applications. It provides a lightweight, portable, and self-sufficient runtime environment that can run on any machine. In this article, we will dive deep into Docker, its components, how it works, and its benefits.\nUnderstanding Docker Architecture Docker architecture comprises several components that work together to provide a complete containerization solution. Here are the key components of Docker:\nDocker Daemon: It is the core component of Docker that runs in the background and manages the container's lifecycle.\nDocker Client: It is the command-line tool that interacts with the Docker daemon to create, run, and manage containers.\nDocker Images: They are read-only templates that contain all the necessary files and configurations to run an application.\nDocker Containers: They are the runtime instances of Docker images.\nDocker Registry: It is a centralized repository that stores Docker images, making them available for sharing and distribution.\nHow Does Docker Work? Docker uses a client-server architecture where the Docker daemon runs on the host machine and listens for Docker client requests. The Docker client communicates with the daemon via a REST API, and the daemon performs the requested actions, such as creating or deleting containers.\nDocker uses a layered filesystem that allows multiple Docker images to share a common base image. The base image is read-only, and every subsequent layer is writeable. When a new container is created, a new writable layer is added on top of the base image layer. This allows the container to modify files without affecting the base image or other containers.\nDocker Benefits Portability: Docker containers are lightweight and portable, making them easy to move across different environments, such as development, testing, and production.\nIsolation: Docker containers provide a high degree of isolation, allowing multiple applications to run on the same machine without interfering with each other.\nScalability: Docker containers can be scaled up or down quickly and easily to meet changing demands.\nResource Efficiency: Docker containers are lightweight and use fewer resources compared to traditional virtual machines, making them more efficient.\nConsistency: Docker containers ensure that the application runs consistently across different environments, reducing the risk of errors and inconsistencies.\nFrequently Asked Questions (FAQs) Q1. How is Docker different from virtual machines?\nA1. Docker containers are lightweight and share the same host kernel, while virtual machines require a separate operating system kernel for each instance.\nQ2. Can Docker run on Windows and macOS?\nA2. Yes, Docker can run on Windows and macOS using Docker Desktop, which provides a native Docker experience on these platforms.\nQ3. How can I share my Docker images with others?\nA3. You can push your Docker images to a public or private Docker registry, such as Docker Hub or Amazon ECR, and share the image tag with others.\nQ4. How can I debug my Docker containers?\nA4. You can use Docker's logging and debugging features, such as docker logs and docker exec, to diagnose and fix issues with your containers.\nQ5. How can I ensure the security of my Docker containers?\nA5. You can follow Docker's best practices for container security, such as limiting container privileges, using trusted base images, and regularly updating your Docker images and containers.\n","categories":"docker","link":"http://localhost:1313/tutorials/docker/whatisdocker/","section":"tutorials","title":"What is Docker: A Comprehensive Guide"},{"body":"Title: How to Turn Off Microsoft Spying and Protect Your Privacy\nWith the rise of technology, privacy has become a major concern for many people. Microsoft has faced criticism for collecting user data through its products and services, but don't worry, you can take control of your privacy and turn off Microsoft's data collection with just a few simple steps.\nStep 1: Review Privacy Settings in Windows 10 The first step to turning off Microsoft spying is to review your privacy settings in Windows 10. To do this, go to the Windows Start menu and click on Settings. Then, click on Privacy. In this section, you'll see different categories, such as General, Speech, Typing, and Inking \u0026amp; typing personalization, each with their own privacy settings. Make sure to go through each category and adjust the settings to your liking.\nStep 2: Turn Off Location Services One of the main ways Microsoft collects data is through location services. To turn this off, go to the Location section in the Privacy settings and toggle the switch to off. You can also choose to turn off location for specific apps by going to the App permissions section and adjusting the settings for each app.\nStep 3: Turn Off Advertising ID Another way Microsoft collects data is through the advertising ID, which is used to personalize ads. To turn this off, go to the General section in the Privacy settings and toggle the switch for \u0026quot;Let apps use advertising ID\u0026quot; to off.\nStep 4: Turn Off Telemetry Data Microsoft also collects data through telemetry, which is used to improve their products and services. If you'd like to turn this off, you'll need to do so through the Registry Editor. To access the Registry Editor, press Windows key + R and type in \u0026quot;regedit\u0026quot; and hit enter. Then, navigate to the following path: HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\DataCollection. Right-click on DataCollection and select New \u0026gt; DWORD (32-bit) Value. Name the new value \u0026quot;AllowTelemetry\u0026quot; and set its value to 0.\nStep 5: Disable Cortana Cortana, Microsoft's virtual assistant, is also known to collect user data. If you'd like to turn this off, go to the Cortana section in the Windows 10 settings and toggle the switch to off. You can also choose to delete the data that Cortana has collected by going to the Permissions \u0026amp; History section.\nWith these simple steps, you can turn off Microsoft spying and take control of your privacy. Protecting your privacy is important, and it's good to know that you can easily do it with just a few adjustments to your settings.\nConclusion By following these steps, you can take control of your privacy and protect your data from being collected by Microsoft. These adjustments may seem small, but they can make a big difference in protecting your privacy. Stay safe and happy browsing!\n","categories":"windows,Microsoft","link":"http://localhost:1313/tutorials/windows/turn_off_microsoft_spying/","section":"tutorials","title":"How to Turn Off Microsoft Spying and Protect Your Privacy"},{"body":"Docker is a popular platform for building, shipping, and running distributed applications. Docker Compose is a tool for defining and running multi-container Docker applications. Portainer is a management tool for Docker that makes it easy to manage your containers, images, networks, and volumes. In this article, we'll show you how to install these tools on a Linux server.\nPrerequisites Before we get started, make sure that you have a Linux server set up and that you have administrative access to that server.\nUpdating the Package Index Before installing Docker, it is important to update the package index on your server. You can do this by running the following command:\n1sudo apt-get update Installing Docker CE Next, we'll install Docker CE (Community Edition) by running the following command:\n1sudo apt-get install docker-ce Starting the Docker Daemon Once the installation is complete, we need to start the Docker daemon by running the following command:\n1sudo systemctl start docker Installing Docker Compose To install Docker Compose, we need to download the latest version of the binary and make it executable. We can do this by running the following commands:\n1sudo curl -L \u0026#34;https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)\u0026#34; -o /usr/local/bin/docker-compose 2sudo chmod +x /usr/local/bin/docker-compose Verifying the Docker and Docker Compose Installations To verify that the Docker and Docker Compose installations were successful, we can run the following commands:\n1docker --version 2docker-compose --version Installing Portainer To install Portainer, we can run the following command:\n1docker run -d -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock portainer/portainer This command will download the Portainer image and run a container based on that image, exposing Portainer on port 9000.\nAccessing Portainer Once the Portainer container is running, we can access the Portainer web interface by opening a web browser and navigating to http://your_server_ip:9000. We should see the Portainer login screen.\nConclusion In this article, we showed you how to install Docker, Docker Compose, and Portainer on a Linux server. You can now start using Docker to build, ship, and run your applications, and use Portainer to manage your Docker environment.\nI hope you found this article helpful. If you have any questions or comments, please leave them in the comments section below. Thank you for reading!\n","categories":"docker,portainer,Linux","link":"http://localhost:1313/tutorials/docker/install-docker-compose-portainer/","section":"tutorials","title":"Install docker, Docker Compose, and portainer"},{"body":"","link":"http://localhost:1313/categories/linux/","section":"categories","title":"Linux"},{"body":"","link":"http://localhost:1313/categories/microsoft/","section":"categories","title":"Microsoft"},{"body":"","link":"http://localhost:1313/categories/portainer/","section":"categories","title":"Portainer"},{"body":"","link":"http://localhost:1313/categories/windows/","section":"categories","title":"Windows"},{"body":"All of my docs we have about windows\n","link":"http://localhost:1313/tutorials/windows/","section":"tutorials","title":"Windows"},{"body":"I have modified the appearance of this website and am currently in the process of refining some of its pages, such as the contact page, while also incorporating a new copy-and-paste feature for ease of code sharing. Please note that further changes to the website's aesthetics may occur.\nIn addition, I am diligently working on the completion of a tutorial video regarding the utilization of syncthing, which will likely be accompanied by supplementary documentation on this platform.\nMoreover, I am in the process of finalizing a video detailing my experience with transferring to a 1u case. I am eager for you to witness this video and learn from any potential errors I may have made.\n","link":"http://localhost:1313/blog/changthetheme/","section":"blog","title":"We change the theme with other updates"},{"body":"","link":"http://localhost:1313/categories/git/","section":"categories","title":"Git"},{"body":"","link":"http://localhost:1313/categories/github/","section":"categories","title":"Github"},{"body":"All of my docs we have about github\n","link":"http://localhost:1313/tutorials/github/","section":"tutorials","title":"Github"},{"body":"GitHub is a popular platform used by developers to collaborate on projects and share code. However, as with any online platform, it's important to take steps to secure your account and protect your data. In this guide, we'll walk you through the steps you can take to set up a secure GitHub account and use security features.\nCreate a Strong Password When creating your GitHub account, make sure to use a strong password that is not easily guessable. Avoid using common words, phrases, or patterns. Instead, use a combination of letters, numbers, and symbols to create a strong and unique password.\nEnable Two-Factor Authentication (2FA) Two-factor authentication adds an extra layer of security to your account by requiring you to provide a second form of identification, such as a code sent to your phone or generated by an app, in addition to your password. To enable 2FA on GitHub, follow these steps:\nLog in to your GitHub account and click on your profile picture in the top-right corner of the page.\nClick on \u0026quot;Settings\u0026quot; in the dropdown menu.\nClick on \u0026quot;Security\u0026quot; in the left-hand sidebar.\nUnder \u0026quot;Two-factor authentication,\u0026quot; click on \u0026quot;Set up two-factor authentication.\u0026quot;\nFollow the prompts to set up 2FA using either a text message or an authentication app.\nSet Up SSH Keys SSH keys allow you to securely authenticate with GitHub without having to enter your username and password every time you push or pull code. To set up SSH keys on GitHub, follow these steps:\nGenerate an SSH key pair on your local machine using the following command in your terminal:\n1 ssh-keygen -t rsa -b 4096 -C \u0026#34;your_email@example.com\u0026#34; When prompted, save the key pair to the default location by pressing \u0026quot;Enter.\u0026quot; Add the SSH key to your GitHub account by following these steps:\nLog in to your GitHub account and click on your profile picture in the top-right corner of the page. Click on \u0026quot;Settings\u0026quot; in the dropdown menu. Click on \u0026quot;SSH and GPG keys\u0026quot; in the left-hand sidebar. Click on \u0026quot;New SSH key.\u0026quot; Give the key a descriptive title and paste the contents of the public key file into the \u0026quot;Key\u0026quot; field. Click \u0026quot;Add SSH key.\u0026quot; Test the SSH key by running the following command in your terminal:\n1 ssh -T git@github.com Review and Manage Your Authorized Applications GitHub allows you to authorize third-party applications to access your account, such as continuous integration services or code analysis tools. It's important to regularly review these authorized applications and revoke access for any that you no longer use or trust. To manage your authorized applications on GitHub, follow these steps:\nLog in to your GitHub account and click on your profile picture in the top-right corner of the page.\nClick on \u0026quot;Settings\u0026quot; in the dropdown menu.\nClick on \u0026quot;Applications\u0026quot; in the left-hand sidebar.\nReview the list of authorized applications and revoke access for any that you no longer use or trust.\nUse Strong Permissions and Access Controls If you are working on a project with others, make sure to use strong permissions and access controls to restrict access to sensitive information. GitHub offers features like protected branches, pull request reviews, and branch restrictions to help you manage access to your repositories. To set up permissions and access controls on GitHub, follow these steps:\nNavigate to the repository that you want to set up permissions and access controls for.\nClick on the \u0026quot;Settings\u0026quot; tab in the top-right corner of the repository page.\nClick on \u0026quot;Branches\u0026quot; in the left-hand sidebar.\nUse the dropdown menus to select which users or teams can push to or merge from the branch.\nEnable pull request reviews by clicking on \u0026quot;Require pull request reviews\u0026quot; and specifying the number of reviewers required.\nSet up branch restrictions by clicking on \u0026quot;Branch protection rules\u0026quot; and selecting the branch you want to protect. Then, enable the \u0026quot;Require pull request reviews\u0026quot; and \u0026quot;Require status checks\u0026quot; options.\nStay Up-to-Date on Security Advisories GitHub regularly publishes security advisories for vulnerabilities that affect its platform. It's important to stay up-to-date on these advisories and take any recommended actions to secure your account and repositories. To view security advisories on GitHub, follow these steps:\nVisit the GitHub Security Advisory page at https://github.com/advisories.\nReview the list of advisories and take any recommended actions to secure your account and repositories.\nIn conclusion, by following these steps, you can help to ensure that your GitHub account and repositories are secure. By using strong passwords, enabling two-factor authentication, setting up SSH keys, reviewing and managing authorized applications, using strong permissions and access controls, and staying up-to-date on security advisories, you can protect your data and collaborate with others on GitHub with confidence.\n","categories":"github,git","link":"http://localhost:1313/tutorial/github/createingSecureGithubAccount/","section":"tutorials","title":"How to Set Up a Secure GitHub Account and Use Security Features"},{"body":" To Install Syncthing on Windows there are two ways of installing it. One is with synctrazor which I will walkthrough below. It also comes with the benefit of having a GUI(Graphical User Interface).\n1. Download Synctrazor The first step is to download Synctrazor. You can download it from the following link.\n1https://github.com/canton7/SyncTrayzor/#installation` When you go to the page you need to click on Download SyncTrayzorSetup-x64.exe. This will download the executable file.\nWhen you go to that page you need to click on Download SyncTrayzorSetup-x64.exe. After you click on that link it will take you to this page and then you will click on SyncTrayzorSetup-x64.exe or SyncTrayzorSetup-x86.exe. Most people will want to use the x64 version if they have a computer with windows7,8, 10, or 11.\n2. Install Synctrazor Just click on the executable file and it will install Synctrazor. It will pop up a warning message. This is because synctrayzorsetup isn't signed by a known publisher of Microsoft. The software is fine to use but it is not a trusted source. So we need to click on the Yes button. The rest is just pressing next to you click on finish. If you want to watch me do it you can watch the video above.\n","categories":"windows,syncthing","link":"http://localhost:1313/tutorials/syncthing/installing-syncthing-on-windows/","section":"tutorials","title":"Install Syncthing on Windows"},{"body":"","link":"http://localhost:1313/categories/syncthing/","section":"categories","title":"Syncthing"},{"body":"All of my docs we have about syncthing.\n","link":"http://localhost:1313/tutorials/syncthing/","section":"tutorials","title":"Syncthing"},{"body":" Step 1 add Syncthing repo to apt sources Syncthing isn’t available to install using the default repo. So the first step is adding syncthing repo to our apt sources so we can install it on our computer. We need to open up a terminal and run the following command.\n1echo \u0026#34;deb https://apt.syncthing.net/ syncthing stable\u0026#34; | sudo tee /etc/apt/sources.list.d/syncthing.list Step 2 Installing curl We must ensure we have curl installed to install the syncthing PGP key. All we need to do is the following command.\n1sudo apt install curl If it is already installed, you will get this message\nIf you need to install it, your screen will look like this one.\nStep 3 – Add syncthing's PGP Keys The next step we need to do Is add the synching repo PGP key to our apt keys. Without this, apt will not trust synching repo and will not install syncthing.\n1curl -s https://syncthing.net/release-key.txt | sudo apt-key add - You should see the following if you added it correctly.\nStep 4 – Update apt’s database We need to update the download package information from synching and your other sources on your computer. We do that by running the sudo apt update.\n1sudo apt update Step 5 – Installing Syncthing We finally get to install Syncthing on Linux. We just need to type the command below and press enter.\n1sudo apt install syncthing Step 6 – Enable the Syncthing service Now we got syncthing installed; we need to enable syncthing to start at boot using the systemctl command. But make sure you replace the username with your user name in the following order. But please don’t use root. It is a security issue.\n1sudo systemctl enable syncthing@username.service Step 7 – Start syncthing service up Let’s start syncthing up for the first time by running this command below. Make sure you change the user name to your user name.\n1sudo systemctl start syncthing@username.service (Optional) setting syncthing so you can remotely connect to it If you want to configure syncthing from another computer, you must change one line in the config file to allow access. It would be best if you had an editor. In this example, I am going to be using pico.\n1sudo pico .config/syncthing/config.xml Need to find 127.0.0.1:8384 It is under the . We need to change it from 127.0.0.1:8384 to 0.0.0.0:8384 Then we need to restart the syncthing service by running this command. Make sure you change the username to your username again\n1sudo systemctl restart syncthing@username.service ","categories":"linux,syncthing","link":"http://localhost:1313/docs/syncthing/installing-syncthing-on-linux/","section":"tutorials","title":"Install Syncthing on Linux"},{"body":"","link":"http://localhost:1313/categories/dropbox/","section":"categories","title":"Dropbox"},{"body":"In the video below I will explain the differnece between Dropbox and Syncthing. It will explain why I went with syncthing.\n","categories":"dropbox,syncthing","link":"http://localhost:1313/tutorials/syncthing/dropbox-vs-syncthing/","section":"tutorials","title":"Dropbox vs Syncthing Which should you choose?"},{"body":"Greetings and welcome to the inaugural post on the Computer Hacking 101 website. In this blog, we aim to keep you informed about our ongoing projects and updates to our YouTube channel and website.\nAs part of our efforts to enhance the website's functionality, we have transitioned from WordPress to Hugo, a contemporary and robust website builder. As we continue to refine the website's design, some changes may occur over time.\nWe are pleased to announce that we have an upcoming video titled \u0026quot;How to Use Syncthing\u0026quot; scheduled for release in the next few weeks. Additionally, we have recently acquired a 1u server case that we will be transferring our Promox server to, which will be the subject of a future video.\nPlease note that due to our team's work commitments and personal obligations, video releases may be infrequent. However, we are committed to delivering high-quality content, and we appreciate your patience and understanding.\n","link":"http://localhost:1313/blog/firstblogpost/","section":"blog","title":"The first blog post"},{"body":"","link":"http://localhost:1313/tags/","section":"tags","title":"Tags"}]